package kernel

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var kernmulRSymm2Dyz_code cu.Function

type kernmulRSymm2Dyz_args struct {
	arg_fftMy  unsafe.Pointer
	arg_fftMz  unsafe.Pointer
	arg_fftKyy unsafe.Pointer
	arg_fftKzz unsafe.Pointer
	arg_fftKyz unsafe.Pointer
	arg_N1     int
	arg_N2     int
	argptr     [7]unsafe.Pointer
}

// Wrapper for kernmulRSymm2Dyz CUDA kernel, asynchronous.
func K_kernmulRSymm2Dyz_async(fftMy unsafe.Pointer, fftMz unsafe.Pointer, fftKyy unsafe.Pointer, fftKzz unsafe.Pointer, fftKyz unsafe.Pointer, N1 int, N2 int, gridDim, blockDim cu.Dim3, str cu.Stream) {
	if kernmulRSymm2Dyz_code == 0 {
		kernmulRSymm2Dyz_code = cu.ModuleLoadData(kernmulRSymm2Dyz_ptx).GetFunction("kernmulRSymm2Dyz")
	}

	var a kernmulRSymm2Dyz_args

	a.arg_fftMy = fftMy
	a.argptr[0] = unsafe.Pointer(&a.arg_fftMy)
	a.arg_fftMz = fftMz
	a.argptr[1] = unsafe.Pointer(&a.arg_fftMz)
	a.arg_fftKyy = fftKyy
	a.argptr[2] = unsafe.Pointer(&a.arg_fftKyy)
	a.arg_fftKzz = fftKzz
	a.argptr[3] = unsafe.Pointer(&a.arg_fftKzz)
	a.arg_fftKyz = fftKyz
	a.argptr[4] = unsafe.Pointer(&a.arg_fftKyz)
	a.arg_N1 = N1
	a.argptr[5] = unsafe.Pointer(&a.arg_N1)
	a.arg_N2 = N2
	a.argptr[6] = unsafe.Pointer(&a.arg_N2)

	args := a.argptr[:]
	cu.LaunchKernel(kernmulRSymm2Dyz_code, gridDim.X, gridDim.Y, gridDim.Z, blockDim.X, blockDim.Y, blockDim.Z, 0, str, args)
}

// Wrapper for kernmulRSymm2Dyz CUDA kernel, synchronized.
func K_kernmulRSymm2Dyz(fftMy unsafe.Pointer, fftMz unsafe.Pointer, fftKyy unsafe.Pointer, fftKzz unsafe.Pointer, fftKyz unsafe.Pointer, N1 int, N2 int, gridDim, blockDim cu.Dim3) {
	str := Stream()
	K_kernmulRSymm2Dyz_async(fftMy, fftMz, fftKyy, fftKzz, fftKyz, N1, N2, gridDim, blockDim, str)
	SyncAndRecycle(str)
}

const kernmulRSymm2Dyz_ptx = `
.version 3.1
.target sm_30
.address_size 64


.visible .entry kernmulRSymm2Dyz(
	.param .u64 kernmulRSymm2Dyz_param_0,
	.param .u64 kernmulRSymm2Dyz_param_1,
	.param .u64 kernmulRSymm2Dyz_param_2,
	.param .u64 kernmulRSymm2Dyz_param_3,
	.param .u64 kernmulRSymm2Dyz_param_4,
	.param .u32 kernmulRSymm2Dyz_param_5,
	.param .u32 kernmulRSymm2Dyz_param_6
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<34>;
	.reg .f32 	%f<20>;
	.reg .s64 	%rd<24>;


	ld.param.u64 	%rd10, [kernmulRSymm2Dyz_param_0];
	ld.param.u64 	%rd11, [kernmulRSymm2Dyz_param_1];
	ld.param.u64 	%rd8, [kernmulRSymm2Dyz_param_2];
	ld.param.u64 	%rd9, [kernmulRSymm2Dyz_param_3];
	ld.param.u64 	%rd12, [kernmulRSymm2Dyz_param_4];
	ld.param.u32 	%r6, [kernmulRSymm2Dyz_param_5];
	ld.param.u32 	%r7, [kernmulRSymm2Dyz_param_6];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd11;
	cvta.to.global.u64 	%rd3, %rd10;
	.loc 2 29 1
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	.loc 2 30 1
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r2, %r11, %r12, %r13;
	.loc 2 32 1
	setp.ge.s32 	%p1, %r2, %r7;
	setp.ge.s32 	%p2, %r1, %r6;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB0_5;

	.loc 2 36 1
	mad.lo.s32 	%r3, %r1, %r7, %r2;
	.loc 2 37 1
	sub.s32 	%r14, %r6, %r1;
	mad.lo.s32 	%r4, %r14, %r7, %r2;
	.loc 2 39 1
	shl.b32 	%r15, %r3, 1;
	.loc 2 41 1
	mul.wide.s32 	%rd13, %r15, 4;
	add.s64 	%rd4, %rd3, %rd13;
	ld.global.f32 	%f1, [%rd4];
	.loc 2 42 1
	add.s32 	%r17, %r15, 1;
	mul.wide.s32 	%rd14, %r17, 4;
	add.s64 	%rd5, %rd3, %rd14;
	ld.global.f32 	%f2, [%rd5];
	.loc 2 43 1
	add.s64 	%rd6, %rd2, %rd13;
	ld.global.f32 	%f3, [%rd6];
	.loc 2 44 1
	add.s64 	%rd7, %rd2, %rd14;
	ld.global.f32 	%f4, [%rd7];
	.loc 2 47 1
	shr.u32 	%r21, %r6, 31;
	add.s32 	%r22, %r6, %r21;
	shr.s32 	%r23, %r22, 1;
	add.s32 	%r24, %r23, 1;
	setp.lt.s32 	%p4, %r1, %r24;
	@%p4 bra 	BB0_3;

	.loc 2 54 1
	mul.wide.s32 	%rd15, %r4, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.f32 	%f8, [%rd16];
	neg.f32 	%f19, %f8;
	mov.u32 	%r33, %r4;
	bra.uni 	BB0_4;

BB0_3:
	.loc 2 50 1
	mul.wide.s32 	%rd17, %r3, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.f32 	%f19, [%rd18];
	mov.u32 	%r33, %r3;

BB0_4:
	cvta.to.global.u64 	%rd19, %rd9;
	.loc 2 49 1
	mul.wide.s32 	%rd20, %r33, 4;
	add.s64 	%rd21, %rd19, %rd20;
	cvta.to.global.u64 	%rd22, %rd8;
	.loc 2 48 1
	add.s64 	%rd23, %rd22, %rd20;
	.loc 2 57 1
	ld.global.f32 	%f9, [%rd21];
	ld.global.f32 	%f10, [%rd23];
	mul.f32 	%f11, %f3, %f19;
	fma.rn.f32 	%f12, %f1, %f10, %f11;
	st.global.f32 	[%rd4], %f12;
	.loc 2 58 1
	mul.f32 	%f13, %f4, %f19;
	fma.rn.f32 	%f14, %f2, %f10, %f13;
	st.global.f32 	[%rd5], %f14;
	.loc 2 59 1
	mul.f32 	%f15, %f3, %f9;
	fma.rn.f32 	%f16, %f1, %f19, %f15;
	st.global.f32 	[%rd6], %f16;
	.loc 2 60 1
	mul.f32 	%f17, %f4, %f9;
	fma.rn.f32 	%f18, %f2, %f19, %f17;
	st.global.f32 	[%rd7], %f18;

BB0_5:
	.loc 2 61 2
	ret;
}


`
