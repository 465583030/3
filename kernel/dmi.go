package kernel

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var dmi_code cu.Function

type dmi_args struct {
	arg_Hx unsafe.Pointer
	arg_Hy unsafe.Pointer
	arg_Hz unsafe.Pointer
	arg_mx unsafe.Pointer
	arg_my unsafe.Pointer
	arg_mz unsafe.Pointer
	arg_dx float32
	arg_dy float32
	arg_dz float32
	arg_cx float32
	arg_cy float32
	arg_cz float32
	arg_N0 int
	arg_N1 int
	arg_N2 int
	argptr [15]unsafe.Pointer
}

// Wrapper for dmi CUDA kernel, asynchronous.
func K_dmi_async(Hx unsafe.Pointer, Hy unsafe.Pointer, Hz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, dx float32, dy float32, dz float32, cx float32, cy float32, cz float32, N0 int, N1 int, N2 int, gridDim, blockDim cu.Dim3, str cu.Stream) {
	if dmi_code == 0 {
		dmi_code = cu.ModuleLoadData(dmi_ptx).GetFunction("dmi")
	}

	var a dmi_args

	a.arg_Hx = Hx
	a.argptr[0] = unsafe.Pointer(&a.arg_Hx)
	a.arg_Hy = Hy
	a.argptr[1] = unsafe.Pointer(&a.arg_Hy)
	a.arg_Hz = Hz
	a.argptr[2] = unsafe.Pointer(&a.arg_Hz)
	a.arg_mx = mx
	a.argptr[3] = unsafe.Pointer(&a.arg_mx)
	a.arg_my = my
	a.argptr[4] = unsafe.Pointer(&a.arg_my)
	a.arg_mz = mz
	a.argptr[5] = unsafe.Pointer(&a.arg_mz)
	a.arg_dx = dx
	a.argptr[6] = unsafe.Pointer(&a.arg_dx)
	a.arg_dy = dy
	a.argptr[7] = unsafe.Pointer(&a.arg_dy)
	a.arg_dz = dz
	a.argptr[8] = unsafe.Pointer(&a.arg_dz)
	a.arg_cx = cx
	a.argptr[9] = unsafe.Pointer(&a.arg_cx)
	a.arg_cy = cy
	a.argptr[10] = unsafe.Pointer(&a.arg_cy)
	a.arg_cz = cz
	a.argptr[11] = unsafe.Pointer(&a.arg_cz)
	a.arg_N0 = N0
	a.argptr[12] = unsafe.Pointer(&a.arg_N0)
	a.arg_N1 = N1
	a.argptr[13] = unsafe.Pointer(&a.arg_N1)
	a.arg_N2 = N2
	a.argptr[14] = unsafe.Pointer(&a.arg_N2)

	args := a.argptr[:]
	cu.LaunchKernel(dmi_code, gridDim.X, gridDim.Y, gridDim.Z, blockDim.X, blockDim.Y, blockDim.Z, 0, str, args)
}

// Wrapper for dmi CUDA kernel, synchronized.
func K_dmi(Hx unsafe.Pointer, Hy unsafe.Pointer, Hz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, dx float32, dy float32, dz float32, cx float32, cy float32, cz float32, N0 int, N1 int, N2 int, gridDim, blockDim cu.Dim3) {
	str := Stream()
	K_dmi_async(Hx, Hy, Hz, mx, my, mz, dx, dy, dz, cx, cy, cz, N0, N1, N2, gridDim, blockDim, str)
	SyncAndRecycle(str)
}

const dmi_ptx = `
.version 3.1
.target sm_30
.address_size 64


.visible .entry dmi(
	.param .u64 dmi_param_0,
	.param .u64 dmi_param_1,
	.param .u64 dmi_param_2,
	.param .u64 dmi_param_3,
	.param .u64 dmi_param_4,
	.param .u64 dmi_param_5,
	.param .f32 dmi_param_6,
	.param .f32 dmi_param_7,
	.param .f32 dmi_param_8,
	.param .f32 dmi_param_9,
	.param .f32 dmi_param_10,
	.param .f32 dmi_param_11,
	.param .u32 dmi_param_12,
	.param .u32 dmi_param_13,
	.param .u32 dmi_param_14
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<134>;
	.reg .f32 	%f<40>;
	.reg .s64 	%rd<44>;


	ld.param.u64 	%rd4, [dmi_param_0];
	ld.param.u64 	%rd5, [dmi_param_1];
	ld.param.u64 	%rd6, [dmi_param_2];
	ld.param.u64 	%rd7, [dmi_param_3];
	ld.param.u64 	%rd8, [dmi_param_4];
	ld.param.u64 	%rd9, [dmi_param_5];
	ld.param.f32 	%f4, [dmi_param_6];
	ld.param.f32 	%f5, [dmi_param_7];
	ld.param.f32 	%f6, [dmi_param_8];
	ld.param.f32 	%f7, [dmi_param_9];
	ld.param.f32 	%f8, [dmi_param_10];
	ld.param.f32 	%f9, [dmi_param_11];
	ld.param.u32 	%r12, [dmi_param_12];
	ld.param.u32 	%r13, [dmi_param_13];
	ld.param.u32 	%r14, [dmi_param_14];
	.loc 2 17 1
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r3, %r15, %r1, %r2;
	.loc 2 18 1
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %ctaid.y;
	mov.u32 	%r18, %tid.y;
	mad.lo.s32 	%r4, %r16, %r17, %r18;
	.loc 2 20 1
	setp.lt.s32 	%p1, %r4, %r14;
	setp.lt.s32 	%p2, %r3, %r13;
	and.pred  	%p3, %p2, %p1;
	.loc 2 24 1
	setp.gt.s32 	%p4, %r12, 0;
	.loc 2 20 1
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB0_9;
	bra.uni 	BB0_1;

BB0_1:
	.loc 2 32 1
	add.f32 	%f1, %f8, %f8;
	.loc 2 33 1
	add.f32 	%f2, %f9, %f9;
	.loc 2 38 1
	add.f32 	%f3, %f7, %f7;
	.loc 2 24 1
	mad.lo.s32 	%r132, %r14, %r3, %r4;
	mul.lo.s32 	%r6, %r14, %r13;
	mov.u32 	%r19, 0;
	cvta.to.global.u64 	%rd10, %rd4;
	cvta.to.global.u64 	%rd12, %rd5;
	cvta.to.global.u64 	%rd13, %rd6;
	mov.u32 	%r133, %r19;

BB0_2:
	.loc 2 27 1
	mov.u32 	%r8, %r133;
	mul.wide.s32 	%rd11, %r132, 4;
	add.s64 	%rd1, %rd10, %rd11;
	st.global.u32 	[%rd1], %r19;
	.loc 2 28 1
	add.s64 	%rd2, %rd12, %rd11;
	st.global.u32 	[%rd2], %r19;
	.loc 2 29 1
	add.s64 	%rd3, %rd13, %rd11;
	st.global.u32 	[%rd3], %r19;
	.loc 2 31 1
	setp.eq.f32 	%p6, %f4, 0f00000000;
	@%p6 bra 	BB0_4;

	mov.u32 	%r30, 0;
	.loc 3 238 5
	max.s32 	%r31, %r8, %r30;
	.loc 2 32 1
	add.s32 	%r32, %r12, -1;
	.loc 3 210 5
	min.s32 	%r33, %r31, %r32;
	.loc 2 32 1
	add.s32 	%r34, %r3, 1;
	.loc 3 238 5
	max.s32 	%r35, %r34, %r30;
	.loc 2 32 1
	add.s32 	%r36, %r13, -1;
	.loc 3 210 5
	min.s32 	%r37, %r35, %r36;
	.loc 2 32 1
	mad.lo.s32 	%r38, %r33, %r13, %r37;
	add.s32 	%r39, %r14, -1;
	.loc 3 238 5
	max.s32 	%r40, %r4, %r30;
	.loc 3 210 5
	min.s32 	%r41, %r40, %r39;
	.loc 2 32 1
	mad.lo.s32 	%r42, %r38, %r14, %r41;
	cvta.to.global.u64 	%rd14, %rd9;
	.loc 2 32 1
	mul.wide.s32 	%rd15, %r42, 4;
	add.s64 	%rd16, %rd14, %rd15;
	add.s32 	%r43, %r3, -1;
	.loc 3 238 5
	max.s32 	%r44, %r43, %r30;
	.loc 3 210 5
	min.s32 	%r45, %r44, %r36;
	.loc 2 32 1
	mad.lo.s32 	%r46, %r33, %r13, %r45;
	add.s32 	%r47, %r4, -1;
	.loc 3 238 5
	max.s32 	%r48, %r47, %r30;
	.loc 3 210 5
	min.s32 	%r49, %r48, %r39;
	.loc 2 32 1
	mad.lo.s32 	%r50, %r46, %r14, %r49;
	mul.wide.s32 	%rd17, %r50, 4;
	add.s64 	%rd18, %rd14, %rd17;
	ld.global.f32 	%f10, [%rd18];
	ld.global.f32 	%f11, [%rd16];
	sub.f32 	%f12, %f11, %f10;
	.loc 4 2399 3
	div.rn.f32 	%f13, %f12, %f1;
	.loc 3 238 5
	max.s32 	%r53, %r3, %r30;
	.loc 3 210 5
	min.s32 	%r54, %r53, %r36;
	.loc 2 33 1
	mad.lo.s32 	%r55, %r33, %r13, %r54;
	add.s32 	%r56, %r4, 1;
	.loc 3 238 5
	max.s32 	%r57, %r56, %r30;
	.loc 3 210 5
	min.s32 	%r58, %r57, %r39;
	.loc 2 33 1
	mad.lo.s32 	%r59, %r55, %r14, %r58;
	cvta.to.global.u64 	%rd19, %rd8;
	.loc 2 33 1
	mul.wide.s32 	%rd20, %r59, 4;
	add.s64 	%rd21, %rd19, %rd20;
	mad.lo.s32 	%r60, %r55, %r14, %r41;
	mul.wide.s32 	%rd22, %r60, 4;
	add.s64 	%rd23, %rd19, %rd22;
	ld.global.f32 	%f14, [%rd23];
	ld.global.f32 	%f15, [%rd21];
	sub.f32 	%f16, %f15, %f14;
	.loc 4 2399 3
	div.rn.f32 	%f17, %f16, %f2;
	.loc 2 34 1
	sub.f32 	%f18, %f17, %f13;
	mul.f32 	%f19, %f18, %f4;
	st.global.f32 	[%rd1], %f19;

BB0_4:
	.loc 2 37 1
	setp.eq.f32 	%p7, %f5, 0f00000000;
	@%p7 bra 	BB0_6;

	.loc 2 38 1
	add.s32 	%r64, %r8, 1;
	mov.u32 	%r65, 0;
	.loc 3 238 5
	max.s32 	%r66, %r64, %r65;
	.loc 2 32 1
	add.s32 	%r67, %r12, -1;
	.loc 3 210 5
	min.s32 	%r68, %r66, %r67;
	.loc 2 32 1
	add.s32 	%r69, %r13, -1;
	.loc 3 238 5
	max.s32 	%r70, %r3, %r65;
	.loc 3 210 5
	min.s32 	%r71, %r70, %r69;
	.loc 2 38 1
	mad.lo.s32 	%r72, %r68, %r13, %r71;
	.loc 2 32 1
	add.s32 	%r73, %r14, -1;
	.loc 3 238 5
	max.s32 	%r74, %r4, %r65;
	.loc 3 210 5
	min.s32 	%r75, %r74, %r73;
	.loc 2 38 1
	mad.lo.s32 	%r76, %r72, %r14, %r75;
	cvta.to.global.u64 	%rd24, %rd9;
	.loc 2 38 1
	mul.wide.s32 	%rd25, %r76, 4;
	add.s64 	%rd26, %rd24, %rd25;
	add.s32 	%r77, %r8, -1;
	.loc 3 238 5
	max.s32 	%r78, %r77, %r65;
	.loc 3 210 5
	min.s32 	%r79, %r78, %r67;
	.loc 2 38 1
	mad.lo.s32 	%r80, %r79, %r13, %r71;
	mad.lo.s32 	%r81, %r80, %r14, %r75;
	mul.wide.s32 	%rd27, %r81, 4;
	add.s64 	%rd28, %rd24, %rd27;
	ld.global.f32 	%f20, [%rd28];
	ld.global.f32 	%f21, [%rd26];
	sub.f32 	%f22, %f21, %f20;
	.loc 4 2399 3
	div.rn.f32 	%f23, %f22, %f3;
	.loc 3 238 5
	max.s32 	%r84, %r8, %r65;
	.loc 3 210 5
	min.s32 	%r85, %r84, %r67;
	.loc 2 39 1
	mad.lo.s32 	%r86, %r85, %r13, %r71;
	.loc 2 33 1
	add.s32 	%r87, %r4, 1;
	.loc 3 238 5
	max.s32 	%r88, %r87, %r65;
	.loc 3 210 5
	min.s32 	%r89, %r88, %r73;
	.loc 2 39 1
	mad.lo.s32 	%r90, %r86, %r14, %r89;
	cvta.to.global.u64 	%rd29, %rd7;
	.loc 2 39 1
	mul.wide.s32 	%rd30, %r90, 4;
	add.s64 	%rd31, %rd29, %rd30;
	mad.lo.s32 	%r91, %r86, %r14, %r75;
	mul.wide.s32 	%rd32, %r91, 4;
	add.s64 	%rd33, %rd29, %rd32;
	ld.global.f32 	%f24, [%rd33];
	ld.global.f32 	%f25, [%rd31];
	sub.f32 	%f26, %f25, %f24;
	.loc 4 2399 3
	div.rn.f32 	%f27, %f26, %f2;
	.loc 2 40 1
	sub.f32 	%f28, %f23, %f27;
	mul.f32 	%f29, %f28, %f5;
	st.global.f32 	[%rd2], %f29;

BB0_6:
	.loc 2 44 1
	add.s32 	%r9, %r8, 1;
	.loc 2 43 1
	setp.eq.f32 	%p8, %f6, 0f00000000;
	@%p8 bra 	BB0_8;

	mov.u32 	%r95, 0;
	.loc 3 238 5
	max.s32 	%r96, %r9, %r95;
	.loc 2 32 1
	add.s32 	%r97, %r12, -1;
	.loc 3 210 5
	min.s32 	%r98, %r96, %r97;
	.loc 2 32 1
	add.s32 	%r99, %r13, -1;
	.loc 3 238 5
	max.s32 	%r100, %r3, %r95;
	.loc 3 210 5
	min.s32 	%r101, %r100, %r99;
	.loc 2 44 1
	mad.lo.s32 	%r102, %r98, %r13, %r101;
	.loc 2 32 1
	add.s32 	%r103, %r14, -1;
	.loc 3 238 5
	max.s32 	%r104, %r4, %r95;
	.loc 3 210 5
	min.s32 	%r105, %r104, %r103;
	.loc 2 44 1
	mad.lo.s32 	%r106, %r102, %r14, %r105;
	cvta.to.global.u64 	%rd34, %rd8;
	.loc 2 44 1
	mul.wide.s32 	%rd35, %r106, 4;
	add.s64 	%rd36, %rd34, %rd35;
	add.s32 	%r107, %r8, -1;
	.loc 3 238 5
	max.s32 	%r108, %r107, %r95;
	.loc 3 210 5
	min.s32 	%r109, %r108, %r97;
	.loc 2 44 1
	mad.lo.s32 	%r110, %r109, %r13, %r101;
	mad.lo.s32 	%r111, %r110, %r14, %r105;
	mul.wide.s32 	%rd37, %r111, 4;
	add.s64 	%rd38, %rd34, %rd37;
	ld.global.f32 	%f30, [%rd38];
	ld.global.f32 	%f31, [%rd36];
	sub.f32 	%f32, %f31, %f30;
	.loc 4 2399 3
	div.rn.f32 	%f33, %f32, %f3;
	.loc 3 238 5
	max.s32 	%r114, %r8, %r95;
	.loc 3 210 5
	min.s32 	%r115, %r114, %r97;
	.loc 2 32 1
	add.s32 	%r116, %r3, 1;
	.loc 3 238 5
	max.s32 	%r117, %r116, %r95;
	.loc 3 210 5
	min.s32 	%r118, %r117, %r99;
	.loc 2 45 1
	mad.lo.s32 	%r119, %r115, %r13, %r118;
	mad.lo.s32 	%r120, %r119, %r14, %r105;
	cvta.to.global.u64 	%rd39, %rd7;
	.loc 2 45 1
	mul.wide.s32 	%rd40, %r120, 4;
	add.s64 	%rd41, %rd39, %rd40;
	.loc 2 32 1
	add.s32 	%r121, %r3, -1;
	.loc 3 238 5
	max.s32 	%r122, %r121, %r95;
	.loc 3 210 5
	min.s32 	%r123, %r122, %r99;
	.loc 2 45 1
	mad.lo.s32 	%r124, %r115, %r13, %r123;
	.loc 2 32 1
	add.s32 	%r125, %r4, -1;
	.loc 3 238 5
	max.s32 	%r126, %r125, %r95;
	.loc 3 210 5
	min.s32 	%r127, %r126, %r103;
	.loc 2 45 1
	mad.lo.s32 	%r128, %r124, %r14, %r127;
	mul.wide.s32 	%rd42, %r128, 4;
	add.s64 	%rd43, %rd39, %rd42;
	ld.global.f32 	%f34, [%rd43];
	ld.global.f32 	%f35, [%rd41];
	sub.f32 	%f36, %f35, %f34;
	.loc 4 2399 3
	div.rn.f32 	%f37, %f36, %f1;
	.loc 2 46 1
	sub.f32 	%f38, %f37, %f33;
	mul.f32 	%f39, %f38, %f6;
	st.global.f32 	[%rd3], %f39;

BB0_8:
	.loc 2 24 1
	add.s32 	%r132, %r132, %r6;
	setp.lt.s32 	%p9, %r9, %r12;
	mov.u32 	%r133, %r9;
	@%p9 bra 	BB0_2;

BB0_9:
	.loc 2 50 2
	ret;
}


`
