package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var exchange_code cu.Function

type exchange_args struct {
	arg_Hx unsafe.Pointer
	arg_Hy unsafe.Pointer
	arg_Hz unsafe.Pointer
	arg_Mx unsafe.Pointer
	arg_My unsafe.Pointer
	arg_Mz unsafe.Pointer
	arg_wx float32
	arg_wy float32
	arg_wz float32
	arg_N0 int
	arg_N1 int
	arg_N2 int
	argptr [12]unsafe.Pointer
}

// Wrapper for exchange CUDA kernel, asynchronous.
func k_exchange_async(Hx unsafe.Pointer, Hy unsafe.Pointer, Hz unsafe.Pointer, Mx unsafe.Pointer, My unsafe.Pointer, Mz unsafe.Pointer, wx float32, wy float32, wz float32, N0 int, N1 int, N2 int, cfg *config, str cu.Stream) {
	if exchange_code == 0 {
		exchange_code = fatbinLoad(exchange_map, "exchange")
	}

	var a exchange_args

	a.arg_Hx = Hx
	a.argptr[0] = unsafe.Pointer(&a.arg_Hx)
	a.arg_Hy = Hy
	a.argptr[1] = unsafe.Pointer(&a.arg_Hy)
	a.arg_Hz = Hz
	a.argptr[2] = unsafe.Pointer(&a.arg_Hz)
	a.arg_Mx = Mx
	a.argptr[3] = unsafe.Pointer(&a.arg_Mx)
	a.arg_My = My
	a.argptr[4] = unsafe.Pointer(&a.arg_My)
	a.arg_Mz = Mz
	a.argptr[5] = unsafe.Pointer(&a.arg_Mz)
	a.arg_wx = wx
	a.argptr[6] = unsafe.Pointer(&a.arg_wx)
	a.arg_wy = wy
	a.argptr[7] = unsafe.Pointer(&a.arg_wy)
	a.arg_wz = wz
	a.argptr[8] = unsafe.Pointer(&a.arg_wz)
	a.arg_N0 = N0
	a.argptr[9] = unsafe.Pointer(&a.arg_N0)
	a.arg_N1 = N1
	a.argptr[10] = unsafe.Pointer(&a.arg_N1)
	a.arg_N2 = N2
	a.argptr[11] = unsafe.Pointer(&a.arg_N2)

	args := a.argptr[:]
	cu.LaunchKernel(exchange_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)
}

// Wrapper for exchange CUDA kernel, synchronized.
func k_exchange(Hx unsafe.Pointer, Hy unsafe.Pointer, Hz unsafe.Pointer, Mx unsafe.Pointer, My unsafe.Pointer, Mz unsafe.Pointer, wx float32, wy float32, wz float32, N0 int, N1 int, N2 int, cfg *config) {
	str := stream()
	k_exchange_async(Hx, Hy, Hz, Mx, My, Mz, wx, wy, wz, N0, N1, N2, cfg, str)
	syncAndRecycle(str)
}

var exchange_map = map[int]string{0: ""}
