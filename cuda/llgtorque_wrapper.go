package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var llgtorque_code cu.Function

type llgtorque_args struct {
	arg_tx    unsafe.Pointer
	arg_ty    unsafe.Pointer
	arg_tz    unsafe.Pointer
	arg_mx    unsafe.Pointer
	arg_my    unsafe.Pointer
	arg_mz    unsafe.Pointer
	arg_hx    unsafe.Pointer
	arg_hy    unsafe.Pointer
	arg_hz    unsafe.Pointer
	arg_alpha float32
	arg_N     int
	argptr    [11]unsafe.Pointer
}

// Wrapper for llgtorque CUDA kernel, asynchronous.
func k_llgtorque_async(tx unsafe.Pointer, ty unsafe.Pointer, tz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, hx unsafe.Pointer, hy unsafe.Pointer, hz unsafe.Pointer, alpha float32, N int, cfg *config, str cu.Stream) {
	if llgtorque_code == 0 {
		llgtorque_code = fatbinLoad(llgtorque_map, "llgtorque")
	}

	var a llgtorque_args

	a.arg_tx = tx
	a.argptr[0] = unsafe.Pointer(&a.arg_tx)
	a.arg_ty = ty
	a.argptr[1] = unsafe.Pointer(&a.arg_ty)
	a.arg_tz = tz
	a.argptr[2] = unsafe.Pointer(&a.arg_tz)
	a.arg_mx = mx
	a.argptr[3] = unsafe.Pointer(&a.arg_mx)
	a.arg_my = my
	a.argptr[4] = unsafe.Pointer(&a.arg_my)
	a.arg_mz = mz
	a.argptr[5] = unsafe.Pointer(&a.arg_mz)
	a.arg_hx = hx
	a.argptr[6] = unsafe.Pointer(&a.arg_hx)
	a.arg_hy = hy
	a.argptr[7] = unsafe.Pointer(&a.arg_hy)
	a.arg_hz = hz
	a.argptr[8] = unsafe.Pointer(&a.arg_hz)
	a.arg_alpha = alpha
	a.argptr[9] = unsafe.Pointer(&a.arg_alpha)
	a.arg_N = N
	a.argptr[10] = unsafe.Pointer(&a.arg_N)

	args := a.argptr[:]
	cu.LaunchKernel(llgtorque_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)
}

// Wrapper for llgtorque CUDA kernel, synchronized.
func k_llgtorque(tx unsafe.Pointer, ty unsafe.Pointer, tz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, hx unsafe.Pointer, hy unsafe.Pointer, hz unsafe.Pointer, alpha float32, N int, cfg *config) {
	str := stream()
	k_llgtorque_async(tx, ty, tz, mx, my, mz, hx, hy, hz, alpha, N, cfg, str)
	syncAndRecycle(str)
}

var llgtorque_map = map[int]string{0: "",
	20: llgtorque_ptx_20,
	30: llgtorque_ptx_30,
	35: llgtorque_ptx_35}

const (
	llgtorque_ptx_20 = `
.version 3.1
.target sm_20
.address_size 64


.visible .entry llgtorque(
	.param .u64 llgtorque_param_0,
	.param .u64 llgtorque_param_1,
	.param .u64 llgtorque_param_2,
	.param .u64 llgtorque_param_3,
	.param .u64 llgtorque_param_4,
	.param .u64 llgtorque_param_5,
	.param .u64 llgtorque_param_6,
	.param .u64 llgtorque_param_7,
	.param .u64 llgtorque_param_8,
	.param .f32 llgtorque_param_9,
	.param .u32 llgtorque_param_10
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<18>;
	.reg .f32 	%f<35>;
	.reg .s64 	%rd<29>;


	ld.param.u64 	%rd10, [llgtorque_param_0];
	ld.param.u64 	%rd11, [llgtorque_param_1];
	ld.param.u64 	%rd12, [llgtorque_param_2];
	ld.param.u64 	%rd13, [llgtorque_param_3];
	ld.param.u64 	%rd14, [llgtorque_param_4];
	ld.param.u64 	%rd15, [llgtorque_param_5];
	ld.param.u64 	%rd16, [llgtorque_param_6];
	ld.param.u64 	%rd17, [llgtorque_param_7];
	ld.param.u64 	%rd18, [llgtorque_param_8];
	ld.param.f32 	%f1, [llgtorque_param_9];
	ld.param.u32 	%r2, [llgtorque_param_10];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd11;
	cvta.to.global.u64 	%rd3, %rd10;
	cvta.to.global.u64 	%rd4, %rd18;
	cvta.to.global.u64 	%rd5, %rd17;
	cvta.to.global.u64 	%rd6, %rd16;
	cvta.to.global.u64 	%rd7, %rd15;
	cvta.to.global.u64 	%rd8, %rd14;
	cvta.to.global.u64 	%rd9, %rd13;
	.loc 2 10 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 2 11 1
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	.loc 2 13 1
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd20, %rd9, %rd19;
	add.s64 	%rd21, %rd8, %rd19;
	add.s64 	%rd22, %rd7, %rd19;
	.loc 2 14 1
	add.s64 	%rd23, %rd6, %rd19;
	add.s64 	%rd24, %rd5, %rd19;
	add.s64 	%rd25, %rd4, %rd19;
	.loc 2 13 1
	ld.global.f32 	%f2, [%rd21];
	.loc 2 14 1
	ld.global.f32 	%f3, [%rd25];
	ld.global.f32 	%f4, [%rd24];
	.loc 2 13 1
	ld.global.f32 	%f5, [%rd22];
	.loc 2 16 1
	mul.f32 	%f6, %f5, %f4;
	mul.f32 	%f7, %f3, %f2;
	sub.f32 	%f8, %f6, %f7;
	.loc 2 14 1
	ld.global.f32 	%f9, [%rd23];
	.loc 2 13 1
	ld.global.f32 	%f10, [%rd20];
	.loc 2 16 1
	mul.f32 	%f11, %f10, %f3;
	mul.f32 	%f12, %f9, %f5;
	sub.f32 	%f13, %f11, %f12;
	mul.f32 	%f14, %f2, %f9;
	mul.f32 	%f15, %f4, %f10;
	sub.f32 	%f16, %f14, %f15;
	.loc 2 17 1
	fma.rn.f32 	%f17, %f1, %f1, 0f3F800000;
	mov.f32 	%f18, 0fBF800000;
	.loc 3 2399 3
	div.rn.f32 	%f19, %f18, %f17;
	.loc 2 18 1
	mul.f32 	%f20, %f5, %f13;
	mul.f32 	%f21, %f16, %f2;
	sub.f32 	%f22, %f20, %f21;
	mul.f32 	%f23, %f10, %f16;
	mul.f32 	%f24, %f8, %f5;
	sub.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f2, %f8;
	mul.f32 	%f27, %f13, %f10;
	sub.f32 	%f28, %f26, %f27;
	fma.rn.f32 	%f29, %f22, %f1, %f8;
	fma.rn.f32 	%f30, %f25, %f1, %f13;
	fma.rn.f32 	%f31, %f28, %f1, %f16;
	mul.f32 	%f32, %f19, %f29;
	mul.f32 	%f33, %f19, %f30;
	mul.f32 	%f34, %f19, %f31;
	.loc 2 20 1
	add.s64 	%rd26, %rd3, %rd19;
	st.global.f32 	[%rd26], %f32;
	.loc 2 21 1
	add.s64 	%rd27, %rd2, %rd19;
	st.global.f32 	[%rd27], %f33;
	.loc 2 22 1
	add.s64 	%rd28, %rd1, %rd19;
	st.global.f32 	[%rd28], %f34;

BB0_2:
	.loc 2 24 2
	ret;
}


`
	llgtorque_ptx_30 = `
.version 3.1
.target sm_30
.address_size 64


.visible .entry llgtorque(
	.param .u64 llgtorque_param_0,
	.param .u64 llgtorque_param_1,
	.param .u64 llgtorque_param_2,
	.param .u64 llgtorque_param_3,
	.param .u64 llgtorque_param_4,
	.param .u64 llgtorque_param_5,
	.param .u64 llgtorque_param_6,
	.param .u64 llgtorque_param_7,
	.param .u64 llgtorque_param_8,
	.param .f32 llgtorque_param_9,
	.param .u32 llgtorque_param_10
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<18>;
	.reg .f32 	%f<35>;
	.reg .s64 	%rd<29>;


	ld.param.u64 	%rd10, [llgtorque_param_0];
	ld.param.u64 	%rd11, [llgtorque_param_1];
	ld.param.u64 	%rd12, [llgtorque_param_2];
	ld.param.u64 	%rd13, [llgtorque_param_3];
	ld.param.u64 	%rd14, [llgtorque_param_4];
	ld.param.u64 	%rd15, [llgtorque_param_5];
	ld.param.u64 	%rd16, [llgtorque_param_6];
	ld.param.u64 	%rd17, [llgtorque_param_7];
	ld.param.u64 	%rd18, [llgtorque_param_8];
	ld.param.f32 	%f1, [llgtorque_param_9];
	ld.param.u32 	%r2, [llgtorque_param_10];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd11;
	cvta.to.global.u64 	%rd3, %rd10;
	cvta.to.global.u64 	%rd4, %rd18;
	cvta.to.global.u64 	%rd5, %rd17;
	cvta.to.global.u64 	%rd6, %rd16;
	cvta.to.global.u64 	%rd7, %rd15;
	cvta.to.global.u64 	%rd8, %rd14;
	cvta.to.global.u64 	%rd9, %rd13;
	.loc 2 10 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 2 11 1
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	.loc 2 13 1
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd20, %rd9, %rd19;
	add.s64 	%rd21, %rd8, %rd19;
	add.s64 	%rd22, %rd7, %rd19;
	.loc 2 14 1
	add.s64 	%rd23, %rd6, %rd19;
	add.s64 	%rd24, %rd5, %rd19;
	add.s64 	%rd25, %rd4, %rd19;
	.loc 2 13 1
	ld.global.f32 	%f2, [%rd21];
	.loc 2 14 1
	ld.global.f32 	%f3, [%rd25];
	ld.global.f32 	%f4, [%rd24];
	.loc 2 13 1
	ld.global.f32 	%f5, [%rd22];
	.loc 2 16 1
	mul.f32 	%f6, %f5, %f4;
	mul.f32 	%f7, %f3, %f2;
	sub.f32 	%f8, %f6, %f7;
	.loc 2 14 1
	ld.global.f32 	%f9, [%rd23];
	.loc 2 13 1
	ld.global.f32 	%f10, [%rd20];
	.loc 2 16 1
	mul.f32 	%f11, %f10, %f3;
	mul.f32 	%f12, %f9, %f5;
	sub.f32 	%f13, %f11, %f12;
	mul.f32 	%f14, %f2, %f9;
	mul.f32 	%f15, %f4, %f10;
	sub.f32 	%f16, %f14, %f15;
	.loc 2 17 1
	fma.rn.f32 	%f17, %f1, %f1, 0f3F800000;
	mov.f32 	%f18, 0fBF800000;
	.loc 3 2399 3
	div.rn.f32 	%f19, %f18, %f17;
	.loc 2 18 1
	mul.f32 	%f20, %f5, %f13;
	mul.f32 	%f21, %f16, %f2;
	sub.f32 	%f22, %f20, %f21;
	mul.f32 	%f23, %f10, %f16;
	mul.f32 	%f24, %f8, %f5;
	sub.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f2, %f8;
	mul.f32 	%f27, %f13, %f10;
	sub.f32 	%f28, %f26, %f27;
	fma.rn.f32 	%f29, %f22, %f1, %f8;
	fma.rn.f32 	%f30, %f25, %f1, %f13;
	fma.rn.f32 	%f31, %f28, %f1, %f16;
	mul.f32 	%f32, %f19, %f29;
	mul.f32 	%f33, %f19, %f30;
	mul.f32 	%f34, %f19, %f31;
	.loc 2 20 1
	add.s64 	%rd26, %rd3, %rd19;
	st.global.f32 	[%rd26], %f32;
	.loc 2 21 1
	add.s64 	%rd27, %rd2, %rd19;
	st.global.f32 	[%rd27], %f33;
	.loc 2 22 1
	add.s64 	%rd28, %rd1, %rd19;
	st.global.f32 	[%rd28], %f34;

BB0_2:
	.loc 2 24 2
	ret;
}


`
	llgtorque_ptx_35 = `
.version 3.1
.target sm_35
.address_size 64


.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	.loc 2 66 3
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	.loc 2 71 3
	ret;
}

.visible .entry llgtorque(
	.param .u64 llgtorque_param_0,
	.param .u64 llgtorque_param_1,
	.param .u64 llgtorque_param_2,
	.param .u64 llgtorque_param_3,
	.param .u64 llgtorque_param_4,
	.param .u64 llgtorque_param_5,
	.param .u64 llgtorque_param_6,
	.param .u64 llgtorque_param_7,
	.param .u64 llgtorque_param_8,
	.param .f32 llgtorque_param_9,
	.param .u32 llgtorque_param_10
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<12>;
	.reg .f32 	%f<35>;
	.reg .s64 	%rd<29>;


	ld.param.u64 	%rd10, [llgtorque_param_0];
	ld.param.u64 	%rd11, [llgtorque_param_1];
	ld.param.u64 	%rd12, [llgtorque_param_2];
	ld.param.u64 	%rd13, [llgtorque_param_3];
	ld.param.u64 	%rd14, [llgtorque_param_4];
	ld.param.u64 	%rd15, [llgtorque_param_5];
	ld.param.u64 	%rd16, [llgtorque_param_6];
	ld.param.u64 	%rd17, [llgtorque_param_7];
	ld.param.u64 	%rd18, [llgtorque_param_8];
	ld.param.f32 	%f1, [llgtorque_param_9];
	ld.param.u32 	%r2, [llgtorque_param_10];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd11;
	cvta.to.global.u64 	%rd3, %rd10;
	cvta.to.global.u64 	%rd4, %rd18;
	cvta.to.global.u64 	%rd5, %rd17;
	cvta.to.global.u64 	%rd6, %rd16;
	cvta.to.global.u64 	%rd7, %rd15;
	cvta.to.global.u64 	%rd8, %rd14;
	cvta.to.global.u64 	%rd9, %rd13;
	.loc 3 10 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 3 11 1
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	BB2_2;

	.loc 3 13 1
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd20, %rd9, %rd19;
	ld.global.nc.f32 	%f2, [%rd20];
	add.s64 	%rd21, %rd8, %rd19;
	ld.global.nc.f32 	%f3, [%rd21];
	add.s64 	%rd22, %rd7, %rd19;
	ld.global.nc.f32 	%f4, [%rd22];
	.loc 3 14 1
	add.s64 	%rd23, %rd6, %rd19;
	ld.global.nc.f32 	%f5, [%rd23];
	add.s64 	%rd24, %rd5, %rd19;
	ld.global.nc.f32 	%f6, [%rd24];
	add.s64 	%rd25, %rd4, %rd19;
	ld.global.nc.f32 	%f7, [%rd25];
	.loc 3 16 1
	mul.f32 	%f8, %f4, %f6;
	mul.f32 	%f9, %f7, %f3;
	sub.f32 	%f10, %f8, %f9;
	mul.f32 	%f11, %f2, %f7;
	mul.f32 	%f12, %f5, %f4;
	sub.f32 	%f13, %f11, %f12;
	mul.f32 	%f14, %f3, %f5;
	mul.f32 	%f15, %f6, %f2;
	sub.f32 	%f16, %f14, %f15;
	.loc 3 17 1
	fma.rn.f32 	%f17, %f1, %f1, 0f3F800000;
	mov.f32 	%f18, 0fBF800000;
	.loc 4 2399 3
	div.rn.f32 	%f19, %f18, %f17;
	.loc 3 18 1
	mul.f32 	%f20, %f4, %f13;
	mul.f32 	%f21, %f16, %f3;
	sub.f32 	%f22, %f20, %f21;
	mul.f32 	%f23, %f2, %f16;
	mul.f32 	%f24, %f10, %f4;
	sub.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f3, %f10;
	mul.f32 	%f27, %f13, %f2;
	sub.f32 	%f28, %f26, %f27;
	fma.rn.f32 	%f29, %f22, %f1, %f10;
	fma.rn.f32 	%f30, %f25, %f1, %f13;
	fma.rn.f32 	%f31, %f28, %f1, %f16;
	mul.f32 	%f32, %f19, %f29;
	mul.f32 	%f33, %f19, %f30;
	mul.f32 	%f34, %f19, %f31;
	.loc 3 20 1
	add.s64 	%rd26, %rd3, %rd19;
	st.global.f32 	[%rd26], %f32;
	.loc 3 21 1
	add.s64 	%rd27, %rd2, %rd19;
	st.global.f32 	[%rd27], %f33;
	.loc 3 22 1
	add.s64 	%rd28, %rd1, %rd19;
	st.global.f32 	[%rd28], %f34;

BB2_2:
	.loc 3 24 2
	ret;
}


`
)
