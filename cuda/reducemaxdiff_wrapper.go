package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var reducemaxdiff_code cu.Function

type reducemaxdiff_args struct {
	arg_src1    unsafe.Pointer
	arg_src2    unsafe.Pointer
	arg_dst     unsafe.Pointer
	arg_initVal float32
	arg_n       int
	argptr      [5]unsafe.Pointer
}

// Wrapper for reducemaxdiff CUDA kernel, asynchronous.
func k_reducemaxdiff_async(src1 unsafe.Pointer, src2 unsafe.Pointer, dst unsafe.Pointer, initVal float32, n int, cfg *config, str cu.Stream) {
	if reducemaxdiff_code == 0 {
		reducemaxdiff_code = cu.ModuleLoadData(reducemaxdiff_ptx).GetFunction("reducemaxdiff")
	}

	var a reducemaxdiff_args

	a.arg_src1 = src1
	a.argptr[0] = unsafe.Pointer(&a.arg_src1)
	a.arg_src2 = src2
	a.argptr[1] = unsafe.Pointer(&a.arg_src2)
	a.arg_dst = dst
	a.argptr[2] = unsafe.Pointer(&a.arg_dst)
	a.arg_initVal = initVal
	a.argptr[3] = unsafe.Pointer(&a.arg_initVal)
	a.arg_n = n
	a.argptr[4] = unsafe.Pointer(&a.arg_n)

	args := a.argptr[:]
	cu.LaunchKernel(reducemaxdiff_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)
}

// Wrapper for reducemaxdiff CUDA kernel, synchronized.
func k_reducemaxdiff(src1 unsafe.Pointer, src2 unsafe.Pointer, dst unsafe.Pointer, initVal float32, n int, cfg *config) {
	str := stream()
	k_reducemaxdiff_async(src1, src2, dst, initVal, n, cfg, str)
	syncAndRecycle(str)
}

const reducemaxdiff_ptx = `
.version 3.0
.target sm_30
.address_size 64


.entry reducemaxdiff(
	.param .u64 reducemaxdiff_param_0,
	.param .u64 reducemaxdiff_param_1,
	.param .u64 reducemaxdiff_param_2,
	.param .f32 reducemaxdiff_param_3,
	.param .u32 reducemaxdiff_param_4
)
{
	.reg .f32 	%f<35>;
	.reg .pred 	%p<8>;
	.reg .s32 	%r<51>;
	.reg .s64 	%rl<16>;
	// demoted variable
	.shared .align 4 .b8 __cuda_local_var_16162_32_non_const_sdata[2048];

	ld.param.u64 	%rl5, [reducemaxdiff_param_0];
	ld.param.u64 	%rl6, [reducemaxdiff_param_1];
	ld.param.u64 	%rl7, [reducemaxdiff_param_2];
	ld.param.u32 	%r1, [reducemaxdiff_param_4];
	cvta.to.global.u64 	%rl1, %rl7;
	cvta.to.global.u64 	%rl2, %rl6;
	cvta.to.global.u64 	%rl3, %rl5;
	.loc 2 8 1
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r49, %r2, %r11, %r3;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r5, %r2, %r12;
	.loc 2 8 1
	setp.lt.s32 	%p1, %r49, %r1;
	@%p1 bra 	BB0_2;

	ld.param.f32 	%f34, [reducemaxdiff_param_3];
	bra.uni 	BB0_4;

BB0_2:
	ld.param.f32 	%f34, [reducemaxdiff_param_3];

BB0_3:
	.loc 2 8 1
	mul.wide.s32 	%rl8, %r49, 4;
	add.s64 	%rl9, %rl3, %rl8;
	add.s64 	%rl10, %rl2, %rl8;
	ld.global.f32 	%f5, [%rl10];
	ld.global.f32 	%f6, [%rl9];
	sub.f32 	%f7, %f6, %f5;
	.loc 3 395 5
	abs.f32 	%f8, %f7;
	.loc 3 435 5
	max.f32 	%f34, %f34, %f8;
	.loc 2 8 1
	add.s32 	%r49, %r49, %r5;
	ld.param.u32 	%r40, [reducemaxdiff_param_4];
	.loc 2 8 1
	setp.lt.s32 	%p2, %r49, %r40;
	@%p2 bra 	BB0_3;

BB0_4:
	.loc 2 8 1
	mov.u32 	%r48, %tid.x;
	mul.wide.s32 	%rl11, %r48, 4;
	mov.u64 	%rl12, __cuda_local_var_16162_32_non_const_sdata;
	add.s64 	%rl4, %rl12, %rl11;
	.loc 2 8 1
	st.shared.f32 	[%rl4], %f34;
	bar.sync 	0;
	mov.u32 	%r45, %ntid.x;
	shr.u32 	%r50, %r45, 1;
	.loc 2 8 1
	setp.lt.u32 	%p3, %r50, 33;
	@%p3 bra 	BB0_8;

BB0_5:
	.loc 2 8 1
	setp.ge.u32 	%p4, %r3, %r50;
	@%p4 bra 	BB0_7;

	.loc 2 8 1
	ld.shared.f32 	%f9, [%rl4];
	add.s32 	%r17, %r50, %r3;
	mul.wide.u32 	%rl13, %r17, 4;
	add.s64 	%rl15, %rl12, %rl13;
	.loc 2 8 1
	ld.shared.f32 	%f10, [%rl15];
	.loc 3 435 5
	max.f32 	%f11, %f9, %f10;
	.loc 2 8 1
	st.shared.f32 	[%rl4], %f11;

BB0_7:
	.loc 2 8 1
	bar.sync 	0;
	shr.u32 	%r50, %r50, 1;
	.loc 2 8 1
	setp.gt.u32 	%p5, %r50, 32;
	@%p5 bra 	BB0_5;

BB0_8:
	.loc 2 8 1
	mov.u32 	%r47, %tid.x;
	.loc 2 8 1
	setp.gt.s32 	%p6, %r47, 31;
	@%p6 bra 	BB0_10;

	.loc 2 8 1
	ld.volatile.shared.f32 	%f12, [%rl4];
	ld.volatile.shared.f32 	%f13, [%rl4+128];
	.loc 3 435 5
	max.f32 	%f14, %f12, %f13;
	.loc 2 8 1
	st.volatile.shared.f32 	[%rl4], %f14;
	ld.volatile.shared.f32 	%f15, [%rl4+64];
	ld.volatile.shared.f32 	%f16, [%rl4];
	.loc 3 435 5
	max.f32 	%f17, %f16, %f15;
	.loc 2 8 1
	st.volatile.shared.f32 	[%rl4], %f17;
	ld.volatile.shared.f32 	%f18, [%rl4+32];
	ld.volatile.shared.f32 	%f19, [%rl4];
	.loc 3 435 5
	max.f32 	%f20, %f19, %f18;
	.loc 2 8 1
	st.volatile.shared.f32 	[%rl4], %f20;
	ld.volatile.shared.f32 	%f21, [%rl4+16];
	ld.volatile.shared.f32 	%f22, [%rl4];
	.loc 3 435 5
	max.f32 	%f23, %f22, %f21;
	.loc 2 8 1
	st.volatile.shared.f32 	[%rl4], %f23;
	ld.volatile.shared.f32 	%f24, [%rl4+8];
	ld.volatile.shared.f32 	%f25, [%rl4];
	.loc 3 435 5
	max.f32 	%f26, %f25, %f24;
	.loc 2 8 1
	st.volatile.shared.f32 	[%rl4], %f26;
	ld.volatile.shared.f32 	%f27, [%rl4+4];
	ld.volatile.shared.f32 	%f28, [%rl4];
	.loc 3 435 5
	max.f32 	%f29, %f28, %f27;
	.loc 2 8 1
	st.volatile.shared.f32 	[%rl4], %f29;

BB0_10:
	.loc 2 8 1
	mov.u32 	%r46, %tid.x;
	.loc 2 8 1
	setp.eq.s32 	%p7, %r46, 0;
	@%p7 bra 	BB0_12;

	.loc 2 9 2
	ret;

BB0_12:
	.loc 2 8 1
	ld.shared.f32 	%f30, [__cuda_local_var_16162_32_non_const_sdata];
	.loc 3 395 5
	abs.f32 	%f31, %f30;
	mov.b32 	 %r38, %f31;
	.loc 3 1881 5
	atom.global.max.s32 	%r39, [%rl1], %r38;
	.loc 2 9 2
	ret;
}


`
