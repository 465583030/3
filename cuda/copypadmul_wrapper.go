package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var copypadmul_code cu.Function

type copypadmul_args struct {
	arg_dst     unsafe.Pointer
	arg_D0      int
	arg_D1      int
	arg_D2      int
	arg_src     unsafe.Pointer
	arg_S0      int
	arg_S1      int
	arg_S2      int
	arg_BsatLUT unsafe.Pointer
	arg_regions unsafe.Pointer
	argptr      [10]unsafe.Pointer
}

// Wrapper for copypadmul CUDA kernel, asynchronous.
func k_copypadmul_async(dst unsafe.Pointer, D0 int, D1 int, D2 int, src unsafe.Pointer, S0 int, S1 int, S2 int, BsatLUT unsafe.Pointer, regions unsafe.Pointer, cfg *config, str cu.Stream) {
	if copypadmul_code == 0 {
		copypadmul_code = fatbinLoad(copypadmul_map, "copypadmul")
	}

	var _a_ copypadmul_args

	_a_.arg_dst = dst
	_a_.argptr[0] = unsafe.Pointer(&_a_.arg_dst)
	_a_.arg_D0 = D0
	_a_.argptr[1] = unsafe.Pointer(&_a_.arg_D0)
	_a_.arg_D1 = D1
	_a_.argptr[2] = unsafe.Pointer(&_a_.arg_D1)
	_a_.arg_D2 = D2
	_a_.argptr[3] = unsafe.Pointer(&_a_.arg_D2)
	_a_.arg_src = src
	_a_.argptr[4] = unsafe.Pointer(&_a_.arg_src)
	_a_.arg_S0 = S0
	_a_.argptr[5] = unsafe.Pointer(&_a_.arg_S0)
	_a_.arg_S1 = S1
	_a_.argptr[6] = unsafe.Pointer(&_a_.arg_S1)
	_a_.arg_S2 = S2
	_a_.argptr[7] = unsafe.Pointer(&_a_.arg_S2)
	_a_.arg_BsatLUT = BsatLUT
	_a_.argptr[8] = unsafe.Pointer(&_a_.arg_BsatLUT)
	_a_.arg_regions = regions
	_a_.argptr[9] = unsafe.Pointer(&_a_.arg_regions)

	args := _a_.argptr[:]
	cu.LaunchKernel(copypadmul_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)
}

// Wrapper for copypadmul CUDA kernel, synchronized.
func k_copypadmul(dst unsafe.Pointer, D0 int, D1 int, D2 int, src unsafe.Pointer, S0 int, S1 int, S2 int, BsatLUT unsafe.Pointer, regions unsafe.Pointer, cfg *config) {
	str := stream()
	k_copypadmul_async(dst, D0, D1, D2, src, S0, S1, S2, BsatLUT, regions, cfg, str)
	syncAndRecycle(str)
}

var copypadmul_map = map[int]string{0: "",
	20: copypadmul_ptx_20,
	30: copypadmul_ptx_30,
	35: copypadmul_ptx_35}

const (
	copypadmul_ptx_20 = `
.version 3.1
.target sm_20
.address_size 64


.visible .entry copypadmul(
	.param .u64 copypadmul_param_0,
	.param .u32 copypadmul_param_1,
	.param .u32 copypadmul_param_2,
	.param .u32 copypadmul_param_3,
	.param .u64 copypadmul_param_4,
	.param .u32 copypadmul_param_5,
	.param .u32 copypadmul_param_6,
	.param .u32 copypadmul_param_7,
	.param .u64 copypadmul_param_8,
	.param .u64 copypadmul_param_9
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<24>;
	.reg .f32 	%f<4>;
	.reg .s64 	%rd<36>;


	ld.param.u64 	%rd17, [copypadmul_param_0];
	ld.param.u32 	%r9, [copypadmul_param_2];
	ld.param.u32 	%r10, [copypadmul_param_3];
	ld.param.u64 	%rd18, [copypadmul_param_4];
	ld.param.u32 	%r11, [copypadmul_param_5];
	ld.param.u32 	%r12, [copypadmul_param_6];
	ld.param.u32 	%r13, [copypadmul_param_7];
	ld.param.u64 	%rd19, [copypadmul_param_8];
	ld.param.u64 	%rd20, [copypadmul_param_9];
	cvta.to.global.u64 	%rd1, %rd17;
	cvta.to.global.u64 	%rd2, %rd18;
	cvta.to.global.u64 	%rd3, %rd19;
	cvta.to.global.u64 	%rd4, %rd20;
	.loc 2 9 1
	mov.u32 	%r1, %ntid.y;
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r3, %tid.y;
	mad.lo.s32 	%r14, %r1, %r2, %r3;
	.loc 2 10 1
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r15, %r4, %r5, %r6;
	.loc 2 12 1
	setp.lt.s32 	%p1, %r15, %r13;
	setp.lt.s32 	%p2, %r14, %r12;
	and.pred  	%p3, %p2, %p1;
	.loc 2 17 1
	setp.gt.s32 	%p4, %r11, 0;
	.loc 2 12 1
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB0_3;
	bra.uni 	BB0_1;

BB0_1:
	.loc 2 17 1
	cvt.s64.s32 	%rd21, %r14;
	cvt.s64.s32 	%rd22, %r10;
	cvt.s64.s32 	%rd23, %r15;
	.loc 2 18 1
	mad.lo.s64 	%rd24, %rd22, %rd21, %rd23;
	.loc 2 17 1
	shl.b64 	%rd25, %rd24, 2;
	add.s64 	%rd35, %rd1, %rd25;
	.loc 2 18 1
	mul.wide.s32 	%rd26, %r10, %r9;
	shl.b64 	%rd6, %rd26, 2;
	.loc 2 17 1
	cvt.s64.s32 	%rd27, %r13;
	.loc 2 18 1
	mad.lo.s64 	%rd28, %rd27, %rd21, %rd23;
	.loc 2 17 1
	add.s64 	%rd34, %rd4, %rd28;
	.loc 2 18 1
	mul.wide.s32 	%rd8, %r13, %r12;
	.loc 2 17 1
	shl.b64 	%rd29, %rd28, 2;
	add.s64 	%rd33, %rd2, %rd29;
	.loc 2 18 1
	shl.b64 	%rd10, %rd8, 2;
	mov.u32 	%r23, 0;

BB0_2:
	.loc 2 19 1
	ld.global.s8 	%rd30, [%rd34];
	shl.b64 	%rd31, %rd30, 2;
	add.s64 	%rd32, %rd3, %rd31;
	.loc 2 20 1
	ld.global.f32 	%f1, [%rd33];
	.loc 2 19 1
	ld.global.f32 	%f2, [%rd32];
	.loc 2 20 1
	mul.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd35], %f3;
	.loc 2 17 1
	add.s64 	%rd35, %rd35, %rd6;
	add.s64 	%rd34, %rd34, %rd8;
	add.s64 	%rd33, %rd33, %rd10;
	.loc 2 17 18
	add.s32 	%r23, %r23, 1;
	.loc 2 17 1
	setp.lt.s32 	%p6, %r23, %r11;
	@%p6 bra 	BB0_2;

BB0_3:
	.loc 2 22 2
	ret;
}


`
	copypadmul_ptx_30 = `
.version 3.1
.target sm_30
.address_size 64


.visible .entry copypadmul(
	.param .u64 copypadmul_param_0,
	.param .u32 copypadmul_param_1,
	.param .u32 copypadmul_param_2,
	.param .u32 copypadmul_param_3,
	.param .u64 copypadmul_param_4,
	.param .u32 copypadmul_param_5,
	.param .u32 copypadmul_param_6,
	.param .u32 copypadmul_param_7,
	.param .u64 copypadmul_param_8,
	.param .u64 copypadmul_param_9
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<24>;
	.reg .f32 	%f<4>;
	.reg .s64 	%rd<36>;


	ld.param.u64 	%rd17, [copypadmul_param_0];
	ld.param.u32 	%r9, [copypadmul_param_2];
	ld.param.u32 	%r10, [copypadmul_param_3];
	ld.param.u64 	%rd18, [copypadmul_param_4];
	ld.param.u32 	%r11, [copypadmul_param_5];
	ld.param.u32 	%r12, [copypadmul_param_6];
	ld.param.u32 	%r13, [copypadmul_param_7];
	ld.param.u64 	%rd19, [copypadmul_param_8];
	ld.param.u64 	%rd20, [copypadmul_param_9];
	cvta.to.global.u64 	%rd1, %rd17;
	cvta.to.global.u64 	%rd2, %rd18;
	cvta.to.global.u64 	%rd3, %rd19;
	cvta.to.global.u64 	%rd4, %rd20;
	.loc 2 9 1
	mov.u32 	%r1, %ntid.y;
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r3, %tid.y;
	mad.lo.s32 	%r14, %r1, %r2, %r3;
	.loc 2 10 1
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r15, %r4, %r5, %r6;
	.loc 2 12 1
	setp.lt.s32 	%p1, %r15, %r13;
	setp.lt.s32 	%p2, %r14, %r12;
	and.pred  	%p3, %p2, %p1;
	.loc 2 17 1
	setp.gt.s32 	%p4, %r11, 0;
	.loc 2 12 1
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB0_3;
	bra.uni 	BB0_1;

BB0_1:
	.loc 2 17 1
	cvt.s64.s32 	%rd21, %r14;
	cvt.s64.s32 	%rd22, %r10;
	cvt.s64.s32 	%rd23, %r15;
	.loc 2 18 1
	mad.lo.s64 	%rd24, %rd22, %rd21, %rd23;
	.loc 2 17 1
	shl.b64 	%rd25, %rd24, 2;
	add.s64 	%rd35, %rd1, %rd25;
	.loc 2 18 1
	mul.wide.s32 	%rd26, %r10, %r9;
	shl.b64 	%rd6, %rd26, 2;
	.loc 2 17 1
	cvt.s64.s32 	%rd27, %r13;
	.loc 2 18 1
	mad.lo.s64 	%rd28, %rd27, %rd21, %rd23;
	.loc 2 17 1
	add.s64 	%rd34, %rd4, %rd28;
	.loc 2 18 1
	mul.wide.s32 	%rd8, %r13, %r12;
	.loc 2 17 1
	shl.b64 	%rd29, %rd28, 2;
	add.s64 	%rd33, %rd2, %rd29;
	.loc 2 18 1
	shl.b64 	%rd10, %rd8, 2;
	mov.u32 	%r23, 0;

BB0_2:
	.loc 2 19 1
	ld.global.s8 	%rd30, [%rd34];
	shl.b64 	%rd31, %rd30, 2;
	add.s64 	%rd32, %rd3, %rd31;
	.loc 2 20 1
	ld.global.f32 	%f1, [%rd33];
	.loc 2 19 1
	ld.global.f32 	%f2, [%rd32];
	.loc 2 20 1
	mul.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd35], %f3;
	.loc 2 17 1
	add.s64 	%rd35, %rd35, %rd6;
	add.s64 	%rd34, %rd34, %rd8;
	add.s64 	%rd33, %rd33, %rd10;
	.loc 2 17 18
	add.s32 	%r23, %r23, 1;
	.loc 2 17 1
	setp.lt.s32 	%p6, %r23, %r11;
	@%p6 bra 	BB0_2;

BB0_3:
	.loc 2 22 2
	ret;
}


`
	copypadmul_ptx_35 = `
.version 3.1
.target sm_35
.address_size 64


.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	.loc 2 66 3
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	.loc 2 71 3
	ret;
}

.visible .entry copypadmul(
	.param .u64 copypadmul_param_0,
	.param .u32 copypadmul_param_1,
	.param .u32 copypadmul_param_2,
	.param .u32 copypadmul_param_3,
	.param .u64 copypadmul_param_4,
	.param .u32 copypadmul_param_5,
	.param .u32 copypadmul_param_6,
	.param .u32 copypadmul_param_7,
	.param .u64 copypadmul_param_8,
	.param .u64 copypadmul_param_9
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<22>;
	.reg .f32 	%f<4>;
	.reg .s64 	%rd<36>;


	ld.param.u64 	%rd17, [copypadmul_param_0];
	ld.param.u32 	%r9, [copypadmul_param_2];
	ld.param.u32 	%r10, [copypadmul_param_3];
	ld.param.u64 	%rd18, [copypadmul_param_4];
	ld.param.u32 	%r11, [copypadmul_param_5];
	ld.param.u32 	%r12, [copypadmul_param_6];
	ld.param.u32 	%r13, [copypadmul_param_7];
	ld.param.u64 	%rd19, [copypadmul_param_8];
	ld.param.u64 	%rd20, [copypadmul_param_9];
	cvta.to.global.u64 	%rd1, %rd17;
	cvta.to.global.u64 	%rd2, %rd18;
	cvta.to.global.u64 	%rd3, %rd19;
	cvta.to.global.u64 	%rd4, %rd20;
	.loc 3 9 1
	mov.u32 	%r1, %ntid.y;
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r3, %tid.y;
	mad.lo.s32 	%r14, %r1, %r2, %r3;
	.loc 3 10 1
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r15, %r4, %r5, %r6;
	.loc 3 12 1
	setp.lt.s32 	%p1, %r15, %r13;
	setp.lt.s32 	%p2, %r14, %r12;
	and.pred  	%p3, %p2, %p1;
	.loc 3 17 1
	setp.gt.s32 	%p4, %r11, 0;
	.loc 3 12 1
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB2_3;
	bra.uni 	BB2_1;

BB2_1:
	.loc 3 17 1
	cvt.s64.s32 	%rd21, %r14;
	cvt.s64.s32 	%rd22, %r10;
	cvt.s64.s32 	%rd23, %r15;
	.loc 3 18 1
	mad.lo.s64 	%rd24, %rd22, %rd21, %rd23;
	.loc 3 17 1
	shl.b64 	%rd25, %rd24, 2;
	add.s64 	%rd35, %rd1, %rd25;
	.loc 3 18 1
	mul.wide.s32 	%rd26, %r10, %r9;
	shl.b64 	%rd6, %rd26, 2;
	.loc 3 17 1
	cvt.s64.s32 	%rd27, %r13;
	.loc 3 18 1
	mad.lo.s64 	%rd28, %rd27, %rd21, %rd23;
	.loc 3 17 1
	add.s64 	%rd34, %rd4, %rd28;
	.loc 3 18 1
	mul.wide.s32 	%rd8, %r13, %r12;
	.loc 3 17 1
	shl.b64 	%rd29, %rd28, 2;
	add.s64 	%rd33, %rd2, %rd29;
	.loc 3 18 1
	shl.b64 	%rd10, %rd8, 2;
	mov.u32 	%r21, 0;

BB2_2:
	.loc 3 19 1
	ld.global.s8 	%rd30, [%rd34];
	shl.b64 	%rd31, %rd30, 2;
	add.s64 	%rd32, %rd3, %rd31;
	ld.global.nc.f32 	%f1, [%rd32];
	.loc 3 20 1
	ld.global.nc.f32 	%f2, [%rd33];
	mul.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd35], %f3;
	.loc 3 17 1
	add.s64 	%rd35, %rd35, %rd6;
	add.s64 	%rd34, %rd34, %rd8;
	add.s64 	%rd33, %rd33, %rd10;
	.loc 3 17 18
	add.s32 	%r21, %r21, 1;
	.loc 3 17 1
	setp.lt.s32 	%p6, %r21, %r11;
	@%p6 bra 	BB2_2;

BB2_3:
	.loc 3 22 2
	ret;
}


`
)
