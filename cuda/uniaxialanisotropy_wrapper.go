package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var uniaxialanisotropy_code cu.Function

type uniaxialanisotropy_args struct {
	arg_Bx unsafe.Pointer
	arg_By unsafe.Pointer
	arg_Bz unsafe.Pointer
	arg_Mx unsafe.Pointer
	arg_My unsafe.Pointer
	arg_Mz unsafe.Pointer
	arg_Ux float32
	arg_Uy float32
	arg_Uz float32
	arg_N  int
	argptr [10]unsafe.Pointer
}

// Wrapper for uniaxialanisotropy CUDA kernel, asynchronous.
func k_uniaxialanisotropy_async(Bx unsafe.Pointer, By unsafe.Pointer, Bz unsafe.Pointer, Mx unsafe.Pointer, My unsafe.Pointer, Mz unsafe.Pointer, Ux float32, Uy float32, Uz float32, N int, cfg *Config, str cu.Stream) {
	if uniaxialanisotropy_code == 0 {
		uniaxialanisotropy_code = cu.ModuleLoadData(uniaxialanisotropy_ptx).GetFunction("uniaxialanisotropy")
	}

	var a uniaxialanisotropy_args

	a.arg_Bx = Bx
	a.argptr[0] = unsafe.Pointer(&a.arg_Bx)
	a.arg_By = By
	a.argptr[1] = unsafe.Pointer(&a.arg_By)
	a.arg_Bz = Bz
	a.argptr[2] = unsafe.Pointer(&a.arg_Bz)
	a.arg_Mx = Mx
	a.argptr[3] = unsafe.Pointer(&a.arg_Mx)
	a.arg_My = My
	a.argptr[4] = unsafe.Pointer(&a.arg_My)
	a.arg_Mz = Mz
	a.argptr[5] = unsafe.Pointer(&a.arg_Mz)
	a.arg_Ux = Ux
	a.argptr[6] = unsafe.Pointer(&a.arg_Ux)
	a.arg_Uy = Uy
	a.argptr[7] = unsafe.Pointer(&a.arg_Uy)
	a.arg_Uz = Uz
	a.argptr[8] = unsafe.Pointer(&a.arg_Uz)
	a.arg_N = N
	a.argptr[9] = unsafe.Pointer(&a.arg_N)

	args := a.argptr[:]
	cu.LaunchKernel(uniaxialanisotropy_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)
}

// Wrapper for uniaxialanisotropy CUDA kernel, synchronized.
func k_uniaxialanisotropy(Bx unsafe.Pointer, By unsafe.Pointer, Bz unsafe.Pointer, Mx unsafe.Pointer, My unsafe.Pointer, Mz unsafe.Pointer, Ux float32, Uy float32, Uz float32, N int, cfg *Config) {
	str := stream()
	k_uniaxialanisotropy_async(Bx, By, Bz, Mx, My, Mz, Ux, Uy, Uz, N, cfg, str)
	syncAndRecycle(str)
}

const uniaxialanisotropy_ptx = `
.version 3.0
.target sm_30
.address_size 64


.entry uniaxialanisotropy(
	.param .u64 uniaxialanisotropy_param_0,
	.param .u64 uniaxialanisotropy_param_1,
	.param .u64 uniaxialanisotropy_param_2,
	.param .u64 uniaxialanisotropy_param_3,
	.param .u64 uniaxialanisotropy_param_4,
	.param .u64 uniaxialanisotropy_param_5,
	.param .f32 uniaxialanisotropy_param_6,
	.param .f32 uniaxialanisotropy_param_7,
	.param .f32 uniaxialanisotropy_param_8,
	.param .u32 uniaxialanisotropy_param_9
)
{
	.reg .f32 	%f<44>;
	.reg .pred 	%p<4>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rl<22>;


	ld.param.u64 	%rl8, [uniaxialanisotropy_param_0];
	ld.param.u64 	%rl9, [uniaxialanisotropy_param_1];
	ld.param.u64 	%rl10, [uniaxialanisotropy_param_2];
	ld.param.u64 	%rl11, [uniaxialanisotropy_param_3];
	ld.param.u64 	%rl12, [uniaxialanisotropy_param_4];
	ld.param.u64 	%rl13, [uniaxialanisotropy_param_5];
	ld.param.u32 	%r2, [uniaxialanisotropy_param_9];
	cvta.to.global.u64 	%rl1, %rl10;
	cvta.to.global.u64 	%rl2, %rl9;
	cvta.to.global.u64 	%rl3, %rl8;
	cvta.to.global.u64 	%rl4, %rl13;
	cvta.to.global.u64 	%rl5, %rl12;
	cvta.to.global.u64 	%rl6, %rl11;
	.loc 2 9 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 2 10 1
	setp.lt.s32 	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	.loc 2 24 2
	ret;

BB0_2:
	.loc 2 12 1
	cvt.s64.s32 	%rl7, %r1;
	mul.wide.s32 	%rl14, %r1, 4;
	add.s64 	%rl15, %rl6, %rl14;
	add.s64 	%rl16, %rl5, %rl14;
	add.s64 	%rl17, %rl4, %rl14;
	ld.global.f32 	%f4, [%rl15];
	ld.global.f32 	%f5, [%rl16];
	.loc 2 13 1
	mul.f32 	%f16, %f5, %f5;
	fma.rn.f32 	%f17, %f4, %f4, %f16;
	.loc 2 12 1
	ld.global.f32 	%f6, [%rl17];
	.loc 2 13 1
	fma.rn.f32 	%f18, %f6, %f6, %f17;
	.loc 3 991 5
	sqrt.rn.f32 	%f7, %f18;
	.loc 2 14 1
	setp.neu.f32 	%p2, %f7, 0f00000000;
	@%p2 bra 	BB0_4;

	mov.f32 	%f42, 0f00000000;
	bra.uni 	BB0_5;

BB0_4:
	.loc 2 14 1
	rcp.rn.f32 	%f42, %f7;

BB0_5:
	mul.f32 	%f10, %f42, %f4;
	mul.f32 	%f11, %f42, %f5;
	mul.f32 	%f12, %f42, %f6;
	ld.param.f32 	%f39, [uniaxialanisotropy_param_7];
	.loc 2 16 1
	mul.f32 	%f20, %f39, %f39;
	ld.param.f32 	%f37, [uniaxialanisotropy_param_6];
	.loc 2 16 1
	fma.rn.f32 	%f21, %f37, %f37, %f20;
	ld.param.f32 	%f41, [uniaxialanisotropy_param_8];
	.loc 2 16 1
	fma.rn.f32 	%f22, %f41, %f41, %f21;
	.loc 3 991 5
	sqrt.rn.f32 	%f13, %f22;
	.loc 2 16 1
	setp.neu.f32 	%p3, %f13, 0f00000000;
	@%p3 bra 	BB0_7;

	mov.f32 	%f43, 0f00000000;
	bra.uni 	BB0_8;

BB0_7:
	.loc 2 16 1
	rcp.rn.f32 	%f43, %f13;

BB0_8:
	.loc 2 18 1
	add.f32 	%f24, %f13, %f13;
	.loc 4 1311 3
	div.rn.f32 	%f25, %f24, %f7;
	ld.param.f32 	%f36, [uniaxialanisotropy_param_6];
	.loc 2 16 1
	mul.f32 	%f26, %f43, %f36;
	ld.param.f32 	%f38, [uniaxialanisotropy_param_7];
	.loc 2 16 1
	mul.f32 	%f27, %f43, %f38;
	.loc 2 18 1
	mul.f32 	%f28, %f11, %f27;
	fma.rn.f32 	%f29, %f10, %f26, %f28;
	ld.param.f32 	%f40, [uniaxialanisotropy_param_8];
	.loc 2 16 1
	mul.f32 	%f30, %f43, %f40;
	.loc 2 18 1
	fma.rn.f32 	%f31, %f12, %f30, %f29;
	mul.f32 	%f32, %f25, %f31;
	mul.f32 	%f33, %f32, %f26;
	mul.f32 	%f34, %f32, %f27;
	mul.f32 	%f35, %f32, %f30;
	.loc 2 20 1
	shl.b64 	%rl18, %rl7, 2;
	add.s64 	%rl19, %rl3, %rl18;
	st.global.f32 	[%rl19], %f33;
	.loc 2 21 1
	add.s64 	%rl20, %rl2, %rl18;
	st.global.f32 	[%rl20], %f34;
	.loc 2 22 1
	add.s64 	%rl21, %rl1, %rl18;
	st.global.f32 	[%rl21], %f35;
	.loc 2 24 2
	ret;
}


`
