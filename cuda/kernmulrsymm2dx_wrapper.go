package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var kernmulRSymm2Dx_code cu.Function

type kernmulRSymm2Dx_args struct {
	arg_fftMx  unsafe.Pointer
	arg_fftKxx unsafe.Pointer
	arg_N1     int
	arg_N2     int
	argptr     [4]unsafe.Pointer
}

// Wrapper for kernmulRSymm2Dx CUDA kernel, asynchronous.
func k_kernmulRSymm2Dx_async(fftMx unsafe.Pointer, fftKxx unsafe.Pointer, N1 int, N2 int, cfg *config, str cu.Stream) {
	if kernmulRSymm2Dx_code == 0 {
		kernmulRSymm2Dx_code = fatbinLoad(kernmulRSymm2Dx_map, "kernmulRSymm2Dx")
	}

	var a kernmulRSymm2Dx_args

	a.arg_fftMx = fftMx
	a.argptr[0] = unsafe.Pointer(&a.arg_fftMx)
	a.arg_fftKxx = fftKxx
	a.argptr[1] = unsafe.Pointer(&a.arg_fftKxx)
	a.arg_N1 = N1
	a.argptr[2] = unsafe.Pointer(&a.arg_N1)
	a.arg_N2 = N2
	a.argptr[3] = unsafe.Pointer(&a.arg_N2)

	args := a.argptr[:]
	cu.LaunchKernel(kernmulRSymm2Dx_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)
}

// Wrapper for kernmulRSymm2Dx CUDA kernel, synchronized.
func k_kernmulRSymm2Dx(fftMx unsafe.Pointer, fftKxx unsafe.Pointer, N1 int, N2 int, cfg *config) {
	str := stream()
	k_kernmulRSymm2Dx_async(fftMx, fftKxx, N1, N2, cfg, str)
	syncAndRecycle(str)
}

var kernmulRSymm2Dx_map = map[int]string{0: ""}
