package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var kernmulC_code cu.Function

type kernmulC_args struct {
	arg_Mx  unsafe.Pointer
	arg_My  unsafe.Pointer
	arg_Mz  unsafe.Pointer
	arg_Kxx unsafe.Pointer
	arg_Kyy unsafe.Pointer
	arg_Kzz unsafe.Pointer
	arg_Kyz unsafe.Pointer
	arg_Kxz unsafe.Pointer
	arg_Kxy unsafe.Pointer
	arg_Kzy unsafe.Pointer
	arg_Kzx unsafe.Pointer
	arg_Kyx unsafe.Pointer
	arg_N   int
	argptr  [13]unsafe.Pointer
}

// Wrapper for kernmulC CUDA kernel, asynchronous.
func k_kernmulC_async(Mx unsafe.Pointer, My unsafe.Pointer, Mz unsafe.Pointer, Kxx unsafe.Pointer, Kyy unsafe.Pointer, Kzz unsafe.Pointer, Kyz unsafe.Pointer, Kxz unsafe.Pointer, Kxy unsafe.Pointer, Kzy unsafe.Pointer, Kzx unsafe.Pointer, Kyx unsafe.Pointer, N int, cfg *config, str cu.Stream) {
	if kernmulC_code == 0 {
		kernmulC_code = cu.ModuleLoadData(kernmulC_ptx).GetFunction("kernmulC")
	}

	var a kernmulC_args

	a.arg_Mx = Mx
	a.argptr[0] = unsafe.Pointer(&a.arg_Mx)
	a.arg_My = My
	a.argptr[1] = unsafe.Pointer(&a.arg_My)
	a.arg_Mz = Mz
	a.argptr[2] = unsafe.Pointer(&a.arg_Mz)
	a.arg_Kxx = Kxx
	a.argptr[3] = unsafe.Pointer(&a.arg_Kxx)
	a.arg_Kyy = Kyy
	a.argptr[4] = unsafe.Pointer(&a.arg_Kyy)
	a.arg_Kzz = Kzz
	a.argptr[5] = unsafe.Pointer(&a.arg_Kzz)
	a.arg_Kyz = Kyz
	a.argptr[6] = unsafe.Pointer(&a.arg_Kyz)
	a.arg_Kxz = Kxz
	a.argptr[7] = unsafe.Pointer(&a.arg_Kxz)
	a.arg_Kxy = Kxy
	a.argptr[8] = unsafe.Pointer(&a.arg_Kxy)
	a.arg_Kzy = Kzy
	a.argptr[9] = unsafe.Pointer(&a.arg_Kzy)
	a.arg_Kzx = Kzx
	a.argptr[10] = unsafe.Pointer(&a.arg_Kzx)
	a.arg_Kyx = Kyx
	a.argptr[11] = unsafe.Pointer(&a.arg_Kyx)
	a.arg_N = N
	a.argptr[12] = unsafe.Pointer(&a.arg_N)

	args := a.argptr[:]
	cu.LaunchKernel(kernmulC_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)
}

// Wrapper for kernmulC CUDA kernel, synchronized.
func k_kernmulC(Mx unsafe.Pointer, My unsafe.Pointer, Mz unsafe.Pointer, Kxx unsafe.Pointer, Kyy unsafe.Pointer, Kzz unsafe.Pointer, Kyz unsafe.Pointer, Kxz unsafe.Pointer, Kxy unsafe.Pointer, Kzy unsafe.Pointer, Kzx unsafe.Pointer, Kyx unsafe.Pointer, N int, cfg *config) {
	str := stream()
	k_kernmulC_async(Mx, My, Mz, Kxx, Kyy, Kzz, Kyz, Kxz, Kxy, Kzy, Kzx, Kyx, N, cfg, str)
	syncAndRecycle(str)
}

const kernmulC_ptx = `
.version 3.0
.target sm_30
.address_size 64


.entry kernmulC(
	.param .u64 kernmulC_param_0,
	.param .u64 kernmulC_param_1,
	.param .u64 kernmulC_param_2,
	.param .u64 kernmulC_param_3,
	.param .u64 kernmulC_param_4,
	.param .u64 kernmulC_param_5,
	.param .u64 kernmulC_param_6,
	.param .u64 kernmulC_param_7,
	.param .u64 kernmulC_param_8,
	.param .u64 kernmulC_param_9,
	.param .u64 kernmulC_param_10,
	.param .u64 kernmulC_param_11,
	.param .u32 kernmulC_param_12
)
{
	.reg .f32 	%f<76>;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<41>;
	.reg .s64 	%rl<54>;


	ld.param.u64 	%rl13, [kernmulC_param_3];
	ld.param.u64 	%rl14, [kernmulC_param_4];
	ld.param.u64 	%rl15, [kernmulC_param_5];
	ld.param.u64 	%rl16, [kernmulC_param_6];
	ld.param.u64 	%rl17, [kernmulC_param_7];
	ld.param.u64 	%rl18, [kernmulC_param_8];
	ld.param.u64 	%rl19, [kernmulC_param_9];
	ld.param.u64 	%rl20, [kernmulC_param_10];
	ld.param.u64 	%rl21, [kernmulC_param_11];
	ld.param.u32 	%r2, [kernmulC_param_12];
	cvta.to.global.u64 	%rl4, %rl21;
	cvta.to.global.u64 	%rl5, %rl20;
	cvta.to.global.u64 	%rl6, %rl19;
	cvta.to.global.u64 	%rl7, %rl18;
	cvta.to.global.u64 	%rl8, %rl17;
	cvta.to.global.u64 	%rl9, %rl16;
	cvta.to.global.u64 	%rl10, %rl15;
	cvta.to.global.u64 	%rl11, %rl14;
	cvta.to.global.u64 	%rl12, %rl13;
	.loc 2 16 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r9, %r6, %r7, %r8;
	shl.b32 	%r1, %r9, 1;
	.loc 2 19 1
	setp.lt.s32 	%p1, %r9, %r2;
	@%p1 bra 	BB0_2;

	.loc 2 59 2
	ret;

BB0_2:
	ld.param.u64 	%rl51, [kernmulC_param_0];
	cvta.to.global.u64 	%rl22, %rl51;
	.loc 2 20 1
	mul.wide.s32 	%rl23, %r1, 4;
	add.s64 	%rl24, %rl22, %rl23;
	.loc 2 21 1
	add.s32 	%r10, %r1, 1;
	mul.wide.s32 	%rl25, %r10, 4;
	add.s64 	%rl26, %rl22, %rl25;
	ld.param.u64 	%rl52, [kernmulC_param_1];
	cvta.to.global.u64 	%rl27, %rl52;
	.loc 2 23 1
	add.s64 	%rl28, %rl27, %rl23;
	.loc 2 24 1
	add.s64 	%rl29, %rl27, %rl25;
	ld.param.u64 	%rl53, [kernmulC_param_2];
	cvta.to.global.u64 	%rl30, %rl53;
	.loc 2 26 1
	add.s64 	%rl31, %rl30, %rl23;
	.loc 2 27 1
	add.s64 	%rl32, %rl30, %rl25;
	.loc 2 29 1
	add.s64 	%rl33, %rl12, %rl23;
	.loc 2 30 1
	add.s64 	%rl34, %rl11, %rl23;
	ld.global.f32 	%f1, [%rl34];
	.loc 2 31 1
	add.s64 	%rl35, %rl10, %rl23;
	ld.global.f32 	%f2, [%rl35];
	.loc 2 32 1
	add.s64 	%rl36, %rl12, %rl25;
	.loc 2 33 1
	add.s64 	%rl37, %rl11, %rl25;
	ld.global.f32 	%f3, [%rl37];
	.loc 2 34 1
	add.s64 	%rl38, %rl10, %rl25;
	ld.global.f32 	%f4, [%rl38];
	.loc 2 36 1
	add.s64 	%rl39, %rl9, %rl23;
	ld.global.f32 	%f5, [%rl39];
	.loc 2 37 1
	add.s64 	%rl40, %rl8, %rl23;
	.loc 2 38 1
	add.s64 	%rl41, %rl7, %rl23;
	.loc 2 39 1
	add.s64 	%rl42, %rl9, %rl25;
	ld.global.f32 	%f6, [%rl42];
	.loc 2 40 1
	add.s64 	%rl43, %rl8, %rl25;
	.loc 2 41 1
	add.s64 	%rl44, %rl7, %rl25;
	.loc 2 43 1
	add.s64 	%rl45, %rl6, %rl23;
	ld.global.f32 	%f7, [%rl45];
	.loc 2 44 1
	add.s64 	%rl46, %rl5, %rl23;
	ld.global.f32 	%f8, [%rl46];
	.loc 2 45 1
	add.s64 	%rl47, %rl4, %rl23;
	ld.global.f32 	%f9, [%rl47];
	.loc 2 46 1
	add.s64 	%rl48, %rl6, %rl25;
	ld.global.f32 	%f10, [%rl48];
	.loc 2 47 1
	add.s64 	%rl49, %rl5, %rl25;
	ld.global.f32 	%f11, [%rl49];
	.loc 2 48 1
	add.s64 	%rl50, %rl4, %rl25;
	ld.global.f32 	%f12, [%rl50];
	.loc 2 29 1
	ld.global.f32 	%f13, [%rl33];
	.loc 2 20 1
	ld.global.f32 	%f14, [%rl24];
	.loc 2 50 1
	mul.f32 	%f15, %f14, %f13;
	.loc 2 32 1
	ld.global.f32 	%f16, [%rl36];
	.loc 2 21 1
	ld.global.f32 	%f17, [%rl26];
	.loc 2 50 1
	neg.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f18, %f16, %f15;
	.loc 2 38 1
	ld.global.f32 	%f20, [%rl41];
	.loc 2 23 1
	ld.global.f32 	%f21, [%rl28];
	.loc 2 50 1
	mul.f32 	%f22, %f21, %f20;
	.loc 2 41 1
	ld.global.f32 	%f23, [%rl44];
	.loc 2 24 1
	ld.global.f32 	%f24, [%rl29];
	.loc 2 50 1
	neg.f32 	%f25, %f24;
	fma.rn.f32 	%f26, %f25, %f23, %f22;
	add.f32 	%f27, %f19, %f26;
	.loc 2 37 1
	ld.global.f32 	%f28, [%rl40];
	.loc 2 26 1
	ld.global.f32 	%f29, [%rl31];
	.loc 2 50 1
	mul.f32 	%f30, %f29, %f28;
	.loc 2 40 1
	ld.global.f32 	%f31, [%rl43];
	.loc 2 27 1
	ld.global.f32 	%f32, [%rl32];
	.loc 2 50 1
	neg.f32 	%f33, %f32;
	fma.rn.f32 	%f34, %f33, %f31, %f30;
	add.f32 	%f35, %f27, %f34;
	st.global.f32 	[%rl24], %f35;
	.loc 2 51 1
	mul.f32 	%f36, %f17, %f13;
	fma.rn.f32 	%f37, %f14, %f16, %f36;
	mul.f32 	%f38, %f24, %f20;
	fma.rn.f32 	%f39, %f21, %f23, %f38;
	add.f32 	%f40, %f37, %f39;
	mul.f32 	%f41, %f32, %f28;
	fma.rn.f32 	%f42, %f29, %f31, %f41;
	add.f32 	%f43, %f40, %f42;
	st.global.f32 	[%rl26], %f43;
	.loc 2 53 1
	mul.f32 	%f44, %f14, %f9;
	fma.rn.f32 	%f45, %f18, %f12, %f44;
	mul.f32 	%f46, %f21, %f1;
	fma.rn.f32 	%f47, %f25, %f3, %f46;
	add.f32 	%f48, %f45, %f47;
	mul.f32 	%f49, %f29, %f5;
	fma.rn.f32 	%f50, %f33, %f6, %f49;
	add.f32 	%f51, %f48, %f50;
	st.global.f32 	[%rl28], %f51;
	.loc 2 54 1
	mul.f32 	%f52, %f17, %f9;
	fma.rn.f32 	%f53, %f14, %f12, %f52;
	mul.f32 	%f54, %f24, %f1;
	fma.rn.f32 	%f55, %f21, %f3, %f54;
	add.f32 	%f56, %f53, %f55;
	mul.f32 	%f57, %f32, %f5;
	fma.rn.f32 	%f58, %f29, %f6, %f57;
	add.f32 	%f59, %f56, %f58;
	st.global.f32 	[%rl29], %f59;
	.loc 2 56 1
	mul.f32 	%f60, %f14, %f8;
	fma.rn.f32 	%f61, %f18, %f11, %f60;
	mul.f32 	%f62, %f21, %f7;
	fma.rn.f32 	%f63, %f25, %f10, %f62;
	add.f32 	%f64, %f61, %f63;
	mul.f32 	%f65, %f29, %f2;
	fma.rn.f32 	%f66, %f33, %f4, %f65;
	add.f32 	%f67, %f64, %f66;
	st.global.f32 	[%rl31], %f67;
	.loc 2 57 1
	mul.f32 	%f68, %f17, %f8;
	fma.rn.f32 	%f69, %f14, %f11, %f68;
	mul.f32 	%f70, %f24, %f7;
	fma.rn.f32 	%f71, %f21, %f10, %f70;
	add.f32 	%f72, %f69, %f71;
	mul.f32 	%f73, %f32, %f2;
	fma.rn.f32 	%f74, %f29, %f4, %f73;
	add.f32 	%f75, %f72, %f74;
	st.global.f32 	[%rl32], %f75;
	.loc 2 59 2
	ret;
}


`
