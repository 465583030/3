/*
	Test uniaxial anisotropy.
	We let the anisotropy compete with an external field
	and verify the relaxed my against OOMMF values.
*/

	setgridsize(64, 64, 1)
	setcellsize(4e-9, 4e-9, 2e-9)

	Msat  = 1100e3
	Aex   = 13e-12
	alpha = 1
	M     = uniform(1, 1, 0)
	savetable(10e-12)
	//setgeom(cylinder(64*4e-9, 64*4e-9)) // todo: average takes into account geometry filling
	
 	// Easy, in-plane
	AnisU = vector(1, 0, 0)
	Ku1   = 0.5e6

	B_ext = vector(0, 0.00, 0)
	run(1e-9)
	expect("my", average(m)[1], 0.000, 1e-3)

	B_ext = vector(0, 0.01, 0)
	run(1e-9)
	expect("my", average(m)[1], 0.011, 1e-3)

	B_ext = vector(0, 0.03, 0)
	run(1e-9)
	expect("my", average(m)[1], 0.033, 1e-3)

	B_ext = vector(0, 0.10, 0)
	run(1e-9)
	expect("my", average(m)[1], 0.110, 1e-3)

	B_ext = vector(0, 0.30, 0)
	run(1e-9)
	expect("my", average(m)[1], 0.331, 1e-3)

 	// Hard, in-plane
	Ku1   = -0.5e6
	B_ext = vector(0, 0.00, 0)
	run(1e-9)
	expect("my", average(m)[1], 1.000, 1e-3)

	B_ext = vector(0.01, 0, 0)
	run(1e-9)
	expect("mx", average(m)[0], 0.011, 1e-3)

	B_ext = vector(0.10, 0, 0)
	run(1e-9)
	expect("mx", average(m)[0], 0.110, 1e-3)

	AnisU = vector(100, 0, 0)                // Test unnormalized U vector
	run(1e-9)
	expect("mx", average(m)[0], 0.110, 1e-3) // should not make a difference (normalized internally)

	AnisU = vector(0, 0, 1)
	B_ext = vector(0, 0, 0)

	// Hard, perpendicular
	Ku1   = -1e6
	run(3e-9)
	expect("mz", average(m)[2], 0, 1e-3)

	// Easy, perpendicular
	Ku1   = 1e6
	run(10e-9)
	expect("mx", average(m)[0], 0, 1e-3)
	expect("my", average(m)[0], 0, 1e-3)

